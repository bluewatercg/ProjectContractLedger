name: Build and Push Docker Images

on:
  push:
    branches: [ main, master, develop, midwayjs ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master, midwayjs ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # 测试作业
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: |
          midway-backend/yarn.lock
          midway-frontend/yarn.lock

    - name: Install backend dependencies
      run: |
        cd midway-backend
        yarn install --frozen-lockfile --network-timeout 100000

    - name: Install frontend dependencies
      run: |
        cd midway-frontend
        yarn install --frozen-lockfile --network-timeout 100000

    - name: Run backend linting
      run: |
        cd midway-backend
        yarn lint

    - name: Build backend
      run: |
        cd midway-backend
        yarn build

    - name: Build frontend
      run: |
        cd midway-frontend
        yarn build

    - name: Run backend tests
      run: |
        cd midway-backend
        yarn test

  # 构建和推送镜像作业
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-

    - name: Build and push application image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Image digest
      run: |
        echo "Application image digest: ${{ steps.build.outputs.digest }}"
        echo "Image tags: ${{ steps.meta.outputs.tags }}"
