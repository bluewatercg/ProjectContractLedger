version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: contract-ledger-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${DB_DATABASE:-contract_ledger}
      MYSQL_USER: ${DB_USERNAME:-contract_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-contract_pass}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - contract-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
    command: --default-authentication-plugin=mysql_native_password

  # 应用服务（前后端合并）
  app:
    image: ghcr.io/${GITHUB_REPOSITORY:-your-username/your-repo}:${IMAGE_TAG:-latest}
    container_name: contract-ledger-app-prod
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${DB_USERNAME:-contract_user}
      - DB_PASSWORD=${DB_PASSWORD:-contract_pass}
      - DB_DATABASE=${DB_DATABASE:-contract_ledger}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - TYPEORM_SYNCHRONIZE=${TYPEORM_SYNCHRONIZE:-false}
      - TYPEORM_MIGRATIONS_RUN=${TYPEORM_MIGRATIONS_RUN:-true}
      - BACKEND_PORT=8080
    ports:
      - "${FRONTEND_HTTP_PORT:-80}:80"
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - contract-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 640M
          cpus: '0.75'
        reservations:
          memory: 320M
          cpus: '0.35'
    volumes:
      # 如果需要自定义nginx配置，可以挂载配置文件
      # - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      # 如果需要SSL证书
      # - ./ssl:/etc/nginx/ssl:ro
      # 应用日志
      - app_logs:/var/log/app

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: contract-ledger-redis-prod
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - contract-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 100mb --maxmemory-policy allkeys-lru

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  contract-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
